# See https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qnode
  labels:
    app: qnode
spec:
  selector:
    matchLabels:
      app: qnode
      # Label selector that determines which Pods belong to the StatefulSet
      # Must match spec: template: metadata: labels
  serviceName: qnode
  replicas: 2  # default nodes per deployments (1 is fine), sans istio kubectl scale adds nodes
  template:
    metadata:
      labels:
        app: qnode
        # Pod template's label selector
        #skaffold.dev/run-id: static
        #app.kubernetes.io/managed-by: skaffold
    spec:
      serviceAccountName: quorum-node-sa
      terminationGracePeriodSeconds: 10
      volumes:
        - name: qnode-genesisconfig
          configMap:
            name: qnode-genesisconfig
        - name: qnode-nodeconfig
          configMap:
            name: qnode-nodeconfig

      initContainers:
      - name: qnodeinit
        image: eu.gcr.io/quorumpreempt/qnode-init
        volumeMounts:
          - name: quorum-pv
            mountPath: /var/lib/quorum
          - name: qnode-genesisconfig
            mountPath: /service/genesisconf.json
            subPath: genesisconf.json
          - name: qnode-nodeconfig
            mountPath: /service/nodeconf.json
            subPath: nodeconf.json
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        command:
          - sh
        args:
          - -cx
          - |
            set -e
            find /var/lib/quorum
            python3 qnodeinit.py \
              --nodedir=/var/lib/quorum/node \
              --address=${POD_NAME}.qnode.default.svc.cluster.local \
              --nodenum=${POD_NAME#*-} init

      containers:
      - name: qnode
        image: quorumengineering/quorum:2.6.0
        volumeMounts:
          - rame: quorum-pv
            mountPath: /var/lib/quorum
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

        command:
          - sh
        args:
          - -cx
          - |
            set -e
            GENESIS_FILE="${NODEDIR}/genesis.json"
            CHAIN_ID=99

            NODEDIR=/var/lib/quorum/node
            REPLICA_NUMBER=${POD_NAME#*-}
            RAFT_ID=$(cat ${NODEDIR}/RAFT_ID)
            export PRIVATE_CONFIG=ignore

            RAFT_ARGS="--raft"
            if [ "$RAFT_ID" != "1" ]; then
              RAFT_ARGS="$RAFT_ARGS  --raftjoinexisting ${RAFT_ID}"
            fi
            geth \
              --raftdnsenable \
              --identity $POD_NAME \
              --datadir $NODEDIR \
              --gcmode archive \
              --syncmode full \
              --nodiscover \
              --verbosity 3 \
              --networkid 99 \
              --miner.gastarget 3000000000 \
              --rpc \
              --rpccorsdomain '*' \
              --rpcvhosts '*' \
              --rpcaddr 0.0.0.0 \
              --ws \
              --wsorigins '*' \
              --wsaddr 0.0.0.0 \
              --rpcapi admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,raft \
              $RAFT_ARGS

        ports:
        - containerPort: 30303
          name: tcp-peer
        - containerPort: 8545
          name: tcp-rpc
        - containerPort: 8546
          name: tcp-wsock
        - containerPort: 50400
          name: tcp-raft
        volumeMounts:
        - name: quorum-pv
          mountPath: /var/lib/quorum
  volumeClaimTemplates:
  - metadata:
      name: quorum-pv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi
